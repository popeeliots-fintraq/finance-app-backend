# finance-app-backend/schemas/orchestration_data.py (UPDATED)

from pydantic import BaseModel, Field, condecimal
from decimal import Decimal
from typing import List, Optional, Dict, Any
from datetime import date

# Use condecimal for precise financial values
FinancialDecimal = condecimal(max_digits=12, decimal_places=2)


# ----------------------------------------------------------------------
# V2 Behavioral ML & Real-Time Recalculation (NEW SCHEMAS)
# ----------------------------------------------------------------------

class ProactiveInsight(BaseModel):
    """
    Schema for a single proactive 'Insight Card' generated by the InsightService.
    This replaces charts/dashboards with actionable nudges.
    """
    type: str = Field(..., description="The insight type (e.g., 'CRITICAL_LEAK_WARNING', 'RECLAIMED_FUNDS_SUMMARY').")
    title: str = Field(..., description="The headline text for the insight card.")
    body: str = Field(..., description="The detailed, actionable message.")
    action: str = Field(..., description="The required user action hook (e.g., 'VIEW_LEAK_IMPACT', 'VIEW_SUGGESTION_PLAN').")
    priority: int = Field(..., description="Priority level for display (0 is highest).")


class CategoryLeakDetail(BaseModel):
    """
    NEW: Detailed breakdown of spending relative to the Dynamic Minimal Baseline (DMB).
    """
    category: str = Field(..., description="The spending category (e.g., 'Food & Dining', 'Shopping').")
    total_spent: FinancialDecimal = Field(Decimal("0.00"), description="Total money spent in this category MTD.")
    dmb_threshold: FinancialDecimal = Field(Decimal("0.00"), description="The Dynamic Minimal Baseline target for this category.")
    leak_amount: FinancialDecimal = Field(Decimal("0.00"), description="The actual money spent above the DMB (the leak).")
    status: str = Field(..., description="Status of the category ('ALERT', 'NEAR_LIMIT', 'GOOD').")


class RecalculationResponse(BaseModel):
    """
    Schema for the response after a transaction triggers the Autopilot Orchestration.
    This data drives the app's immediate state update.
    """
    projected_reclaimable: FinancialDecimal = Field(Decimal("0.00"), description="The new total reclaimable salary MTD (Overall Leak).")
    insights: List[ProactiveInsight] = Field(..., description="List of current proactive and reactive insight cards for the user.")
    category_leaks: List[CategoryLeakDetail] = Field(..., description="NEW: Category-wise leak breakdown for the Leak Bucket View.")


# ----------------------------------------------------------------------
# V2 Guided Orchestration: Suggestion & Consent (No Change)
# ----------------------------------------------------------------------
# ... (SuggestedAllocation, ConsentPlanOut, ConsentTransferItem, ConsentMoveIn, ConsentMoveOut schemas remain the same)
# ...
